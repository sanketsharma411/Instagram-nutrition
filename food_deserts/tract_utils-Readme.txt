tract2line(tract,tract_dict):
	Takes as input the tract id and the corresponding tract_dict containing the following values
    It will create a tab separated string of the values in the following order
    FORMAT = ['tract_id','avg_cal','avg_sug','avg_fat','avg_cho','avg_fib','avg_pro','num_posts','avg_posts',\
          'fd','State','POP2010','Rural','LowIncomeTracts','UATYP10','centroid']
	Does not append new line, do so while writing to file

line2tract(line):
	Loads back a line generated by the previous function into a dictionary format with the same keys as in the above function
    # Loads one line and returns a dict of tract:{tract_info}
    # With the info converted into the specific format [float mostly, or bool]


# Following are functions from the now deprecated fd_utils.py	

get_variable_lookup_dict('C:\Users\Shweta\Desktop\CS 8903\FINAL/food_deserts\data\tract_info_var_lookup.csv')
	Function for description of the variable names from CSV data
	returns a dictionary with keys as the variable names and the values as their descriptions

getTractInfo('C:\Users\Shweta\Desktop\CS 8903\FINAL/food_deserts\data\tract_info.csv')
	Function to load the tract info 
	The data file is around 56 MB so this function takes some time and some RAM
	returns a dictionary with the 
		keys as the tract ids and 
		values as a dictionary with
			keys as the variable names
			value as the actual value

isFD(tract):
	Based on the following file
		C:\Users\Shweta\Desktop\CS 8903\FINAL/food_deserts\data/food_deserts_ids.txt
	Tells whether the 11-digit tract id is a food desert or not, i.e. looks up if the 11-digit id is present in the file
	[The file gets loaded when importing the library, but is small in size ~ 83KB so not an issue]